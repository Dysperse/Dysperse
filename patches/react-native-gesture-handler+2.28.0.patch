diff --git a/node_modules/react-native-gesture-handler/src/components/ReanimatedDrawerLayout.tsx b/node_modules/react-native-gesture-handler/src/components/ReanimatedDrawerLayout.tsx
index 9cc1ed1..78909eb 100644
--- a/node_modules/react-native-gesture-handler/src/components/ReanimatedDrawerLayout.tsx
+++ b/node_modules/react-native-gesture-handler/src/components/ReanimatedDrawerLayout.tsx
@@ -2,7 +2,7 @@
 // It's cross-compatible with all platforms despite
 // `DrawerLayoutAndroid` only being available on android
 
-import React, {
+import {
   ReactNode,
   forwardRef,
   useCallback,
@@ -13,15 +13,15 @@ import React, {
 } from 'react';
 
 import {
-  StyleSheet,
+  I18nManager,
   Keyboard,
+  LayoutChangeEvent,
+  Platform,
   StatusBar,
-  I18nManager,
   StatusBarAnimation,
   StyleProp,
+  StyleSheet,
   ViewStyle,
-  LayoutChangeEvent,
-  Platform,
 } from 'react-native';
 
 import Animated, {
@@ -36,16 +36,16 @@ import Animated, {
   withSpring,
 } from 'react-native-reanimated';
 
-import { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';
-import { GestureDetector } from '../handlers/gestures/GestureDetector';
 import {
-  UserSelect,
   ActiveCursor,
-  MouseButton,
-  HitSlop,
   GestureStateChangeEvent,
+  HitSlop,
+  MouseButton,
+  UserSelect,
 } from '../handlers/gestureHandlerCommon';
 import { PanGestureHandlerEventPayload } from '../handlers/GestureHandlerEventPayload';
+import { GestureDetector } from '../handlers/gestures/GestureDetector';
+import { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';
 
 const DRAG_TOSS = 0.05;
 
@@ -527,9 +527,10 @@ const DrawerLayout = forwardRef<DrawerLayoutMethods, DrawerLayoutProps>(
         .activeCursor(activeCursor)
         .mouseButton(mouseButton)
         .hitSlop(drawerOpened ? fillHitSlop : edgeHitSlop)
-        .minDistance(drawerOpened ? 100 : 0)
-        .activeOffsetX(gestureOrientation * minSwipeDistance)
-        .failOffsetY([-15, 15])
+        .minDistance(50)
+        .activeOffsetX([-30, 30])
+        // .failOffsetY([-5, 5])
+        .shouldCancelWhenOutside(true)
         .simultaneousWithExternalGesture(overlayDismissGesture)
         .enableTrackpadTwoFingerGesture(enableTrackpadTwoFingerGesture)
         .enabled(
